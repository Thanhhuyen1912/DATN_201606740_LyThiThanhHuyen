
@{
    ViewData["Title"] = "Danh sách loại sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<script src="https://cdn.datatables.net/2.2.1/js/dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/2.2.1/css/dataTables.dataTables.min.css" />

<div id="loading" class="loading" style="display: none;">Đang tải...</div>
<div class="container">
    <div class="gsm-daihoi-info">
        <div class="row d-flex justify-content-center">
            <span class="col-12 text-center p-1 titlediv">Danh sách loại sản phẩm</span>
        </div>
    </div>
    <div class="k-portlet__body">
        <ul class="nav nav-pills nav-tabs-btn nav-pills-btn-success row" role="tablist">
            <li class="nav-item col gsm-link-tab">
                <a class="nav-link active show" data-toggle="tab" href="#subjectListTab" role="tab" aria-selected="true">
                    <span class="nav-link-title text-uppercase">Danh sách loại sản phẩm</span>
                </a>
            </li>
            @if (Context.Session.GetString("UserRole") != null)
            {
                string[] roles = Context.Session.GetString("UserRole").Split(",");
                @* @if (roles.Any(role => CConfig.Admin.Contains(role)) || roles.Any(role => CConfig.QuanlyLSP.Contains(role)) || roles.Any(role => CConfig.Quanly.Contains(role))) *@
                {
                    <li class="nav-item col gsm-link-tab">
                        <a class="nav-link" data-toggle="tab" href="#subjectFormTab" role="tab" aria-selected="false">
                            <span id="formTabTitle" class="nav-link-title text-uppercase">Tạo mới</span>
                        </a>
                    </li>
                }
            }
        </ul>

        <div class="line_top col-md-12"></div>

        <div class="tab-content">

            <!-- Categoroies List Tab -->
            <div class="tab-pane fade show active" id="subjectListTab">
                <div class="d-flex justify-content-between mb-2">
                    <button id="alphabetSortBtn" class="btn btn-secondary">Sắp xếp </button>
                </div>
                <!-- Add custom sort button here -->
                <table id="listGrid" class="display mt-3" style="width: 100%;">
                    <thead style="height:50px;font-size:17px">
                        <tr>
                            <th><input type="checkbox"></th>
                            <th>Mã</th>
                            <th>Tên loại sản phẩm</th>
                            <th>Mô tả</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

            @if (Context.Session.GetString("UserRole") != null)
            {
                string[] roles = Context.Session.GetString("UserRole").Split(",");
                @* @if (roles.Any(role => CConfig.Admin.Contains(role)) || roles.Any(role => CConfig.QuanlyLSP.Contains(role)) || roles.Any(role => CConfig.Quanly.Contains(role))) *@
                {
                    <!-- Add/Edit Categories Form Tab (Unified for Create/Edit) -->
                    <div class="tab-pane fade boxshadow pt-2" id="subjectFormTab" role="tabpanel">
                        <div class="form-group row nopadding">
                            <form id="SubjectForm" class="col-12 ">
                                <input type="hidden" class="form-control" id="">
                                <!-- Product Id Field -->
                                <div class="col-md-12 d-inline-block">
                                    <div class="form-group row nopadding">
                                        <div class="col-md-3">
                                            <label class="col-form-label" for="tCategotyID">Mã loại sản phẩm (*)</label>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" class="form-control" id="tCategotyID" required>
                                        </div>
                                    </div>

                                    <!-- Product Name Field -->

                                    <div class="form-group row nopadding">
                                        <div class="col-md-3">
                                            <label class="col-form-label">Tên loại sản phẩm (*)</label>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" class="form-control" id="tCategoryName">
                                        </div>
                                    </div>


                                    <!-- Product Note Field -->

                                    <div class="form-group row nopadding">
                                        <div class="col-md-3">
                                            <label class="col-form-label">Mô tả</label>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" class="form-control" id="tDescription">
                                        </div>
                                    </div>
                                </div>


                            </form>
                        </div>

                        <!-- Button Group -->
                        <div class="form-group row">
                            <div class="row d-flex justify-content-center col-12">
                                <button type="button" class="btn btn-primary mz-3 col-md-2 col-sm-12" id="Insert">Thêm mới</button>
                                <button type="button" class="btn btn-primary mz-3 col-md-2 col-sm-12" id="Update" style="display:none;">Cập nhật</button>
                                <button type="button" class="btn btn-secondary mz-3 col-md-2 col-sm-12" id="Reset">Làm mới</button>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>



@section Scripts {
    <script>

                        function fetchUserRoles() {
            fetch("/Account/GetRoles") // API trả về UserRoles
                .then(response => response.json())
                .then(data => {
                    sessionStorage.setItem("UserRoles", data); // Lưu vào sessionStorage
                })
                .catch(error => console.error("Lỗi lấy quyền:", error));
        }

        // Gọi hàm khi trang load
        document.addEventListener("DOMContentLoaded", fetchUserRoles);
        $(document).ready(function () {
            // Load initial data
                loadGridData();
            // Function to load data into the grid
                function loadGridData() {
                            var url = "https://localhost:44300/Categories/GetAll";
                            $.get(url, {}, function (response) {
                        var dulieu = response.data || [];

            // Khởi tạo hoặc cập nhật DataTable
                $('#listGrid').DataTable({
                            dom: '<"top"f>rt<"bottom"ip><"clear">',
                            destroy: true,
                            lengthChange: true,
                            fixedColumns: true,
                            autoWidth: false,
                            searching: false,
                            ordering: true,
                            data: dulieu,
                            paging: true,
                            columns: [
                                        { "data": "id",
                                            "width": "10%",
                                            render: function (data, type, row) {
                                                return `<input type="checkbox" data-id="${data}">`;
                                            }
                                        },
                                        { "data": "id","width": "20%" },
                                            { "data": "categorY_NAME","width": "30%" },
                                            { "data": "description", "width": "30%" },

                                        {
                                                        "data": "id", "width": "10%",
            render: function (data) {
                // Lấy danh sách quyền từ sessionStorage
                let userRoles = sessionStorage.getItem("UserRoles");

                // Kiểm tra xem userRoles có giá trị không
                if (!userRoles) {
                    userRoles = [];
                } else {
                    userRoles = userRoles.split(","); // Chuyển chuỗi thành mảng
                }

                // Kiểm tra quyền chỉnh sửa và xóa
                let canEdit = userRoles.includes("Admin") || userRoles.includes("Quản lý loại sản phẩm");
                let canDelete = userRoles.includes("Admin");

                let editButton = canEdit ? `
                    <button class='ViewDetails btn btn-link' data-id="${data}">
                        <i class="bi bi-pencil-fill"></i>
                    </button>
                ` : "";

                let deleteButton = canDelete ? `
                    <button class='DeleteSubject btn btn-link' data-id="${data}">
                        <i class="bi bi-trash-fill"></i>
                    </button>
                ` : "";

                return editButton + deleteButton;
            }
        }

                                    ],
                            language: {
                                search: "Tìm kiếm:",
                                info: "Hiển thị từ _START_ đến _END_ của _TOTAL_ loại sản phẩm",
                                zeroRecords: "Không tìm thấy kết quả nào.",

                            }
                                });

            // Sự kiện sắp xếp theo alphabet
                $('#alphabetSortBtn').off('click').on('click', function () {
                                    let table = $('#listGrid').DataTable();
                                    let currentOrder = table.order();

                                    if (currentOrder[0][0] === 1 && currentOrder[0][1] === 'asc') {
                                        table.order([1, 'desc']).draw(); // Sắp xếp giảm dần
                                    } else {
                                        table.order([1, 'asc']).draw(); // Sắp xếp tăng dần
                                    }
                                });
                            })
                            .fail(function () {
                                alert("Có lỗi xảy ra khi tải dữ liệu.");
                            });
                }
                     // Reset form
                    $('#Reset').click(function () {
                                $('#SubjectForm')[0].reset();
                                $("#tCategotyID").val('').prop('readonly', false);;
                                $('#Insert').show();
                                $('#Update').hide();
                                $('#formTabTitle').text('Tạo mới');
                            });


                         // Insert new category
                    $('#Insert').click(function () {
                                const categoryData = {
                                        ID: $("#tCategotyID").val(),
                                        CATEGORY_NAME: $("#tCategoryName").val(),
                                        DESCRIPTION: $("#tDescription").val()
                                };

                                $.ajax({
                                    url: "https://localhost:44300/Categories/Add",
                                    method: "POST",
                                    contentType: "application/json",
                                    data: JSON.stringify(categoryData),
                                    success: function () {
                                            $("#tCategotyID").val('');
                                            $("#tCategoryName").val('');
                                            $("#tDescription").val('');
                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: 'Loại sản phẩm mới đã được thêm.',
                                            icon: 'success',
                                            confirmButtonText: 'OK'
                                        });
                                        loadGridData(); // Reload dữ liệu
                                    },
                                    error: function (xhr) {
                                        Swal.fire({
                                            title: 'Thất bại!',
                                            text: 'Đã xảy ra lỗi khi thêm loại sản phẩm.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                });
                            });

                        // View category details
                    $(document).on('click', '.ViewDetails', function () {
                              let table = $('#listGrid').DataTable();
                                let row = $(this).closest('tr');
                                let rowData = table.row(row).data();
                                let id = rowData.id;

                                $.ajax({
                                    url: `https://localhost:44300/Categories/GetDetails?id=${id}`,
                                    type: 'GET',
                                    success: function (respone) {
                                        if (respone && respone.data ) {
                                            const data1 = respone.data;
                                            $("#tCategotyID").val(data1.id).prop('readonly', true);
                                            $("#tCategoryName").val(data1.categorY_NAME);
                                            $("#tDescription").val(data1.description);
                                            $('#Insert').hide();
                                            $('#Update').show();
                                            $('#formTabTitle').text('Chi tiết');
                                            $('a[href="#subjectFormTab"]').tab('show');
                                        } else {
                                            alert('Chi tiết loại sản phẩm không tìm thấy.');
                                        }
                                    },
                                    error: function () {
                                        alert('Có lỗi xảy ra khi tải chi tiết.');
                                    }
                                });
                            });

                        // Delete category
                    $(document).on('click', '.DeleteSubject', function () {
                                if (confirm("Bạn có chắc chắn muốn xóa?")) {
                                let table = $('#listGrid').DataTable();
                                let row = $(this).closest('tr');
                                let rowData = table.row(row).data();
                                let id1 = rowData.id;
                                     $.ajax({
                                    url: `https://localhost:44300/Categogies/Delete?ID=${id1}`,
                                    type: 'DELETE',
                                    xhrFields: { withCredentials: true },
                                    success: function (response) {
                                        // Hiển thị thông báo thành công
                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: 'Loại sản phẩm đã được xóa.',
                                            icon: 'success',
                                            confirmButtonText: 'OK'
                                        }).then(() => {
                                            // Cập nhật lại DataTable
                                            table.row(row).remove().draw();
                                        });
                                    },
                                        error: function (xhr) {
                                            Swal.fire({
                                                title: 'Thất bại!',
                                                text:  'Đã xảy ra lỗi khi xóa loại sản phẩm.',
                                                icon: 'error',
                                                confirmButtonText: 'OK'
                                            });
                                        }
                                    });
                                }
                            });

                        // Update
                    $('#Update').click(function () {
                                const productData = {
                                        ID: $("#tCategotyID").val(),
                                        CATEGORY_NAME: $("#tCategoryName").val(),
                                        DESCRIPTION: $("#tDescription").val()
                                };

                                $.ajax({
                                    url: "https://localhost:44300/Categories/Update",
                                    method: "PUT",
                                    contentType: "application/json",
                                    data: JSON.stringify(productData),
                                    success: function () {
                                        $("#tCategotyID").val('').prop('readonly', false);;
                                        $("#tCategoryName").val('');
                                        $("#tDescription").val('');
                                        $('#Insert').show();
                                        $('#Update').hide();
                                        $('#formTabTitle').text('Tạo mới');
                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: 'Loại sản phẩm đã được cập nhật.',
                                            icon: 'success',
                                            confirmButtonText: 'OK'
                                        });
                                        loadGridData(); // Reload dữ liệu
                                    },
                                    error: function (xhr) {
                                        Swal.fire({
                                            title: 'Thất bại!',
                                            text: 'Đã xảy ra lỗi khi cập nhật loại sản phẩm.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                });
                            });
                        });
    </script>
}

<style>
    /* Hide default sorting arrows */
    #listGrid thead th {
        cursor: default;
        position: relative;
    }

        /* Hide the sorting arrows */
        #listGrid thead th.sorting:before,
        #listGrid thead th.sorting:after,
        #listGrid thead th.sorting_asc:before,
        #listGrid thead th.sorting_asc:after,
        #listGrid thead th.sorting_desc:before,
        #listGrid thead th.sorting_desc:after {
            display: none;
        }
    /* Align search bar to the top left */
    .dataTables_filter {
        text-align: center;
    }

    /* Center the pagination controls at the bottom */
    .dataTables_length, .dataTables_filter, .dataTables_paginate {
        text-align: center;
    }
    /* Align custom sort button with search and pagination */
    .dataTables_wrapper .top {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

</style>